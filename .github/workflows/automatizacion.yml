name: Security Scan Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  actions: read
  contents: read
  security-events: write

jobs:
  sonarcloud:
    name: SonarCloud Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Necesario para análisis completo de historial

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v3.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
        with:
          args: >
            -Dsonar.projectKey=yataco01/Sonarscan
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.scm.revision=${{ github.sha }}

      - name: Upload SonarCloud Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: sonarcloud-report
          path: .scannerwork/report-task.txt

  trivy:
    name: Trivy Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t tu-app:latest .

      - name: Run Trivy vulnerability scan
        uses: aquasecurity/trivy-action@0.30.0
        with:
          image-ref: 'tu-app:latest'
          format: 'sarif'
          output: 'trivy-results.sarif'
          exit-code: '0'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Upload Trivy Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy-results.sarif

  gitguardian:
    name: GitGuardian Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Necesario para escanear historial de commits

      - name: GitGuardian scan
        uses: GitGuardian/ggshield-action@v1.31.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}
        with:
          args: 'scan ci'

      - name: Upload GitGuardian Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gitguardian-report
          path: ggshield-output.json
        continue-on-error: true

  trufflehog:
    name: TruffleHog Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Necesario para escanear historial de commits

      - name: TruffleHog Scan
        uses: edplato/trufflehog-actions-scan@v2
        with:
          scanArguments: "--regex --entropy=False --max_depth=50 --json > trufflehog-report.json"

      - name: Upload TruffleHog Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: trufflehog-report
          path: trufflehog-report.json

  owasp-zap:
    name: OWASP ZAP Baseline Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Application Container
        run: |
          docker run -d --name webapp -p 8080:80 tu-usuario/tu-imagen:tag
          sleep 10 # Espera a que el contenedor esté listo

      - name: Check Container
        run: |
          docker ps
          curl -I http://localhost:8080 || echo "Warning: Could not connect to webapp"

      - name: ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.14.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'http://localhost:8080'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a -j -f json'
          issue_title: 'ZAP Baseline Scan Report'
          fail_action: false
          allow_issue_writing: true
          artifact_name: 'zap_scan'

      - name: Upload ZAP Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: zap_out.json

      - name: Stop Container
        if: always()
        run: |
          docker stop webapp
          docker rm webapp
